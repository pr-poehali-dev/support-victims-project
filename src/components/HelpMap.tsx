import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { MapPin, Search } from "lucide-react";

const HelpMap: React.FC = () => {
  const [location, setLocation] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  const handleFindNearest = () => {
    setIsLoading(true);
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    setTimeout(() => {
      setIsLoading(false);
      alert("–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–µ–π –ø–æ–º–æ—â–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–∫–æ—Ä–æ!");
    }, 1500);
  };

  const handleUseGeolocation = () => {
    if (navigator.geolocation) {
      setIsLoading(true);
      navigator.geolocation.getCurrentPosition(
        (position) => {
          setLocation(`${position.coords.latitude}, ${position.coords.longitude}`);
          setIsLoading(false);
          alert("–í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ. –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–µ–π –ø–æ–º–æ—â–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–∫–æ—Ä–æ!");
        },
        (error) => {
          setIsLoading(false);
          alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –≤—Ä—É—á–Ω—É—é.");
          console.error(error);
        }
      );
    } else {
      alert("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º.");
    }
  };

  return (
    <Card className="sos-shadow bg-white">
      <CardHeader>
        <CardTitle className="text-2xl flex items-center text-sos-darkGray">
          <MapPin className="h-6 w-6 mr-2 text-sos-green" />
          –ù–∞–π—Ç–∏ –ø–æ–º–æ—â—å —Ä—è–¥–æ–º
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="bg-sos-lightGray p-4 rounded-md h-[250px] flex flex-col items-center justify-center">
            <div className="text-6xl mb-4">üó∫Ô∏è</div>
            <p className="text-center text-large mb-2">–ö–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É</p>
            <p className="text-center text-sos-gray">–î–ª—è –∑–∞—â–∏—Ç—ã –≤–∞—à–µ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–∞—Ä—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>
          </div>

          <div className="relative">
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å"
              value={location}
              onChange={(e) => setLocation(e.target.value)}
              className="w-full p-4 pl-10 text-large border border-sos-green rounded-md focus:outline-none focus:ring-2 focus:ring-sos-green"
            />
            <span className="absolute left-3 top-4">
              <Search className="h-5 w-5 text-sos-gray" />
            </span>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
            <Button
              onClick={handleUseGeolocation}
              variant="outline"
              className="text-large py-6 border-sos-green text-sos-green hover:bg-sos-green hover:text-white"
              disabled={isLoading}
            >
              <MapPin className="mr-2 h-5 w-5" />
              –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
            </Button>
            <Button
              onClick={handleFindNearest}
              className="text-large py-6 bg-sos-green hover:bg-sos-darkGreen text-white"
              disabled={isLoading || !location}
            >
              {isLoading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à—É—é –ø–æ–º–æ—â—å"}
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default HelpMap;
